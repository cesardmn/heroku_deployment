#!/usr/bin/env ruby

require "yui/compressor"

# require 'rubygems'
# require 'httparty'
# class Buckupper
#   include HTTParty
#   base_uri 'restlessbeings-backupper.heroku.com'
#   basic_auth 'mooktakim', 'situation'
# end
# 
# puts Buckupper.post('/')

app = "restlessbeings"
remote = "heroku"

def compress_js_css
  compressor = YUI::JavaScriptCompressor.new(:munge => true)
  file = File.open("public/javascripts/all.js", "r")
  text = compressor.compress(file.readlines.join("\n"))
  file.close
  file = File.open("public/javascripts/all.js", "w")
  file.write(text)
  file.close

  compressor = compressor = YUI::CssCompressor.new
  file = File.open("public/stylesheets/all.css", "r")
  text = compressor.compress(file.readlines.join("\n"))
  file.close
  file = File.open("public/stylesheets/all.css", "w")
  file.write(text)
  file.close
end

system %(git push >/dev/null 2>&1)
puts "Generating all the Javascripts and CSS as production"
system %(rm public/javascripts/all.js public/stylesheets/all.css 2> /dev/null)
result = system %(RAILS_ENV=production ./script/rails runner "require 'rails/console/app' ; app.get '/generate_js_and_css'")
compress_js_css
system %(git add public/javascripts/ public/stylesheets/)

raise "JS & CSS generation failed" unless result

system %(git commit -m "JS & CSS" -o public/javascripts/ public/stylesheets/ >/dev/null 2>&1)

if `git remote | grep #{remote}`.to_s == ""
  puts "Couldn't find '#{remote}' remote, added one now"
  system %(git remote add #{remote} git@heroku.com:#{app}.git)
end
system %(git push #{remote} HEAD:master)
system %(git pull #{remote} master >/dev/null 2>&1)
system %(git push >/dev/null 2>&1)
system %(heroku rake db:migrate --app #{app})

version = `git show HEAD | head -n 1`.split(" ").last.strip
system %(rake hoptoad:deploy TO=production REVISION=#{version} REPO=restlessbeings USER=mooktakim)
